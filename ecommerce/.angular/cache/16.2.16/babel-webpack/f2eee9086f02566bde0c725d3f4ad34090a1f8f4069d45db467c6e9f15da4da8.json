{"ast":null,"code":"import { EditProductDialogComponent } from './edit-product-dialog/edit-product-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../services/product.service\";\nimport * as i3 from \"@angular/common\";\nfunction ProductCardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"p\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 4);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 4);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ProductCardComponent_div_1_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.openEditDialog(i_r2));\n    });\n    i0.ɵɵtext(10, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ProductCardComponent_div_1_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const product_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteProduct(product_r1._id, i_r2));\n    });\n    i0.ɵɵtext(12, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Name : \", product_r1.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Price : \", product_r1.price, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Quantity : \", product_r1.quantity, \"\");\n  }\n}\nexport class ProductCardComponent {\n  //so AppComp sends the product array to productCard which is the child\n  constructor(dialog, productService) {\n    this.dialog = dialog;\n    this.productService = productService;\n    this.products = []; //using @input to get value from Parent(appcomp) where we have the products array which consists of products\n  }\n\n  deleteProduct(id, index) {\n    this.productService.deleteProduct(id).subscribe(() => {\n      this.products.splice(index, 1);\n    });\n  }\n  //creating a modal for the edit option using angular material\n  //creating a instance of MatDialog so it could be used in creating a dialog box / modal\n  openEditDialog(index) {\n    const dialogRef = this.dialog.open(EditProductDialogComponent, {\n      width: '500px',\n      data: {\n        ...this.products[index]\n      } // Pass a copy of the product at the given index\n    });\n\n    dialogRef.afterClosed().subscribe(updatedProduct => {\n      if (updatedProduct) {\n        // Updates the product in the products array\n        this.productService.updateProduct(updatedProduct._id, updatedProduct).subscribe(response => {\n          this.products[index] = response; // Update UI after successful edit\n        });\n      }\n\n      console.log(updatedProduct);\n    });\n  }\n  static {\n    this.ɵfac = function ProductCardComponent_Factory(t) {\n      return new (t || ProductCardComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ProductService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProductCardComponent,\n      selectors: [[\"app-productCard\"]],\n      inputs: {\n        products: \"products\"\n      },\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"card-container\"], [\"class\", \"product-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"product-card\"], [1, \"card-content\"], [1, \"product-details\"], [1, \"btn-grp\"], [1, \"edit-btn\", 3, \"click\"], [1, \"delete-btn\", 3, \"click\"]],\n      template: function ProductCardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, ProductCardComponent_div_1_Template, 13, 3, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.products);\n        }\n      },\n      dependencies: [i3.NgForOf],\n      styles: [\".card-container[_ngcontent-%COMP%]{\\n    display:flex;\\n    flex-wrap: wrap;\\n    gap:10px;\\n    justify-content: center;\\n}\\n.product-card[_ngcontent-%COMP%]{\\n    width: calc(33.33% - 20px); \\n\\n    background: white;\\n    border-radius: 8px;\\n    padding: 20px 5px;\\n    box-shadow: 10px 14px 15px 5px grey;\\n    text-align: center;\\n    border: 2px solid gainsboro;\\n}\\n.card-content[_ngcontent-%COMP%] {\\n    border: 5px solid #448336; \\n\\n    padding: 20px 20px;\\n    margin: 8px;\\n    border-radius: 10px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    background-color: #f9f9f9; \\n\\n}\\n\\n.product-card[_ngcontent-%COMP%]:hover {\\n    font-size: 20px;\\n    transform: translateY(-10px); \\n\\n    box-shadow: 10px 10px 20px gray\\n  }\\n\\n.product-details[_ngcontent-%COMP%]{\\n    font-size: 18px;\\n    color: black;\\n    margin-bottom: 10px;\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif ;\\n}\\n\\n.btn-grp[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content:  center;\\n    padding-top : 10px;\\n    gap : 25px;\\n}\\n.edit-btn[_ngcontent-%COMP%]{\\n    background-color: #ffc107;\\n    border: none;\\n    padding: 8px 12px;\\n    cursor: pointer;\\n    border-radius: 10px;\\n}\\n.edit-btn[_ngcontent-%COMP%]:hover {\\n    background-color: #e67e22;\\n  }\\n.delete-btn[_ngcontent-%COMP%]{\\n    background-color: #dc3545;\\n    border: none;\\n    padding: 8px 20px;\\n    cursor: pointer;\\n    border-radius: 10px;\\n}\\n.delete-btn[_ngcontent-%COMP%]:hover {\\n    background-color: #bb2d3b;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZHVjdC1jYXJkL3Byb2R1Y3QtY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGVBQWU7SUFDZixRQUFRO0lBQ1IsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSwwQkFBMEIsRUFBRSwrQkFBK0I7SUFDM0QsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsbUNBQW1DO0lBQ25DLGtCQUFrQjtJQUNsQiwyQkFBMkI7QUFDL0I7QUFDQTtJQUNJLHlCQUF5QixFQUFFLHFCQUFxQjtJQUNoRCxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQix5QkFBeUIsRUFBRSx5Q0FBeUM7QUFDeEU7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsNEJBQTRCLEVBQUUsMkJBQTJCO0lBQ3pEO0VBQ0Y7O0FBRUY7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQiw2REFBNkQ7QUFDakU7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isd0JBQXdCO0lBQ3hCLGtCQUFrQjtJQUNsQixVQUFVO0FBQ2Q7QUFDQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLHlCQUF5QjtFQUMzQjtBQUNGO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0kseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtY29udGFpbmVye1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgZ2FwOjEwcHg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG4ucHJvZHVjdC1jYXJke1xyXG4gICAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMjBweCk7IC8qIDMgY2FyZHMgcGVyIHJvdywgbWludXMgZ2FwICovXHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIHBhZGRpbmc6IDIwcHggNXB4O1xyXG4gICAgYm94LXNoYWRvdzogMTBweCAxNHB4IDE1cHggNXB4IGdyZXk7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBnYWluc2Jvcm87XHJcbn1cclxuLmNhcmQtY29udGVudCB7XHJcbiAgICBib3JkZXI6IDVweCBzb2xpZCAjNDQ4MzM2OyAvKiBHcmF5IGlubmVyIGZyYW1lICovXHJcbiAgICBwYWRkaW5nOiAyMHB4IDIwcHg7XHJcbiAgICBtYXJnaW46IDhweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5OyAvKiBMaWdodCBiYWNrZ3JvdW5kIGZvciBiZXR0ZXIgY29udHJhc3QgKi9cclxufVxyXG5cclxuLnByb2R1Y3QtY2FyZDpob3ZlciB7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwcHgpOyAvKiBTdWJ0bGUgZmxvYXRpbmcgZWZmZWN0ICovXHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMjBweCBncmF5XHJcbiAgfVxyXG5cclxuLnByb2R1Y3QtZGV0YWlsc3tcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBmb250LWZhbWlseTogJ1NlZ29lIFVJJywgVGFob21hLCBHZW5ldmEsIFZlcmRhbmEsIHNhbnMtc2VyaWYgO1xyXG59XHJcblxyXG4uYnRuLWdycHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICBjZW50ZXI7XHJcbiAgICBwYWRkaW5nLXRvcCA6IDEwcHg7XHJcbiAgICBnYXAgOiAyNXB4O1xyXG59XHJcbi5lZGl0LWJ0bntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmMxMDc7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiA4cHggMTJweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuLmVkaXQtYnRuOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNjdlMjI7XHJcbiAgfVxyXG4uZGVsZXRlLWJ0bntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkYzM1NDU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiA4cHggMjBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuLmRlbGV0ZS1idG46aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2JiMmQzYjtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["EditProductDialogComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProductCardComponent_div_1_Template_button_click_9_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","openEditDialog","ProductCardComponent_div_1_Template_button_click_11_listener","product_r1","$implicit","ctx_r5","deleteProduct","_id","ɵɵadvance","ɵɵtextInterpolate1","name","price","quantity","ProductCardComponent","constructor","dialog","productService","products","id","subscribe","splice","dialogRef","open","width","data","afterClosed","updatedProduct","updateProduct","response","console","log","ɵɵdirectiveInject","i1","MatDialog","i2","ProductService","selectors","inputs","decls","vars","consts","template","ProductCardComponent_Template","rf","ctx","ɵɵtemplate","ProductCardComponent_div_1_Template","ɵɵproperty"],"sources":["c:\\AngularPractice\\Angular-FrontEnd\\ecommerce\\src\\app\\product-card\\product-card.component.ts","c:\\AngularPractice\\Angular-FrontEnd\\ecommerce\\src\\app\\product-card\\product-card.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditProductDialogComponent } from './edit-product-dialog/edit-product-dialog.component';\nimport { ProductService } from '../services/product.service';\n\n@Component({\n  selector: 'app-productCard',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent {\n @Input() products : any[] = []; //using @input to get value from Parent(appcomp) where we have the products array which consists of products\n //so AppComp sends the product array to productCard which is the child\n\n constructor(public dialog: MatDialog, private productService : ProductService) {} \n      deleteProduct(id: string, index : number){ // the id param is for backend deletion, while the index param is for UI deletion since the products are traversed using the index variable\n        this.productService.deleteProduct(id).subscribe( () => {\n          this.products.splice(index,1);\n        });\n      }\n      //creating a modal for the edit option using angular material\n      //creating a instance of MatDialog so it could be used in creating a dialog box / modal\n\n      openEditDialog(index: number) {\n        const dialogRef = this.dialog.open(EditProductDialogComponent, {\n          width: '500px',\n          data: { ...this.products[index] } // Pass a copy of the product at the given index\n        });\n      \n        dialogRef.afterClosed().subscribe(updatedProduct => {\n          if (updatedProduct) {\n            // Updates the product in the products array\n            this.productService.updateProduct(updatedProduct._id, updatedProduct).subscribe(\n              (response) => {\n                this.products[index] = response; // Update UI after successful edit\n              }\n        )}\n            console.log(updatedProduct);\n        });\n      }\n}\n","<div class = \"card-container\">\n    <div class = \"product-card\" *ngFor = \"let product of products; let i = index\"> \n        <!-- product is the item that we're gonna use for each product and products is the array of products in productCardComp.ts-->\n        <!-- the products array creation and pushing of created products occur in the AppComp.ts file and the products array is then sent to the producCardComp.ts-->\n         \n        <div class=\"card-content\">\n            <p class=\"product-details\">Name : {{product.name}}</p>\n            <p class=\"product-details\">Price : {{product.price}}</p>\n            <p class=\"product-details \">Quantity : {{product.quantity}}</p>\n\n            <div class = \"btn-grp\">\n                <button class = \"edit-btn\" (click) = \"openEditDialog(i)\">Edit</button>\n                <button class = \"delete-btn\" (click) = \"deleteProduct(product._id,i)\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}