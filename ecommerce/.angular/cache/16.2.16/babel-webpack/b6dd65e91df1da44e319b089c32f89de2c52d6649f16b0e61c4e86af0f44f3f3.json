{"ast":null,"code":"import { EditProductDialogComponent } from './edit-product-dialog/edit-product-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../services/product.service\";\nimport * as i3 from \"@angular/common\";\nfunction ProductCardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"p\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 3);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 4)(8, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ProductCardComponent_div_1_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.openEditDialog(i_r2));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ProductCardComponent_div_1_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const product_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteProduct(product_r1._id, i_r2));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Name : \", product_r1.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Price : \", product_r1.price, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Quantity : \", product_r1.quantity, \"\");\n  }\n}\nexport class ProductCardComponent {\n  //so AppComp sends the product array to productCard which is the child\n  constructor(dialog, productService) {\n    this.dialog = dialog;\n    this.productService = productService;\n    this.products = []; //using @input to get value from Parent(appcomp) where we have the products array which consists of products\n  }\n\n  deleteProduct(id, index) {\n    this.productService.deleteProduct(id).subscribe(() => {\n      this.products.splice(index, 1);\n    });\n  }\n  //creating a modal for the edit option using angular material\n  //creating a instance of MatDialog so it could be used in creating a dialog box / modal\n  openEditDialog(index) {\n    const dialogRef = this.dialog.open(EditProductDialogComponent, {\n      width: '500px',\n      data: {\n        ...this.products[index]\n      } // Pass a copy of the product at the given index\n    });\n\n    dialogRef.afterClosed().subscribe(updatedProduct => {\n      if (updatedProduct) {\n        // Updates the product in the products array\n        this.productService.updateProduct(updatedProduct._id, updatedProduct).subscribe(response => {\n          this.products[index] = response; // Update UI after successful edit\n        });\n      }\n\n      console.log(updatedProduct);\n    });\n  }\n  static {\n    this.ɵfac = function ProductCardComponent_Factory(t) {\n      return new (t || ProductCardComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ProductService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProductCardComponent,\n      selectors: [[\"app-productCard\"]],\n      inputs: {\n        products: \"products\"\n      },\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"card-container\"], [\"class\", \"product-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"product-card\"], [1, \"product-details\"], [1, \"btn-grp\"], [1, \"edit-btn\", 3, \"click\"], [1, \"delete-btn\", 3, \"click\"]],\n      template: function ProductCardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, ProductCardComponent_div_1_Template, 12, 3, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.products);\n        }\n      },\n      dependencies: [i3.NgForOf],\n      styles: [\".card-container[_ngcontent-%COMP%]{\\n    display:flex;\\n    flex-wrap: wrap;\\n    gap:10px;\\n    justify-content: center;\\n    justify-content: flex-start;\\n}\\n.product-card[_ngcontent-%COMP%]{\\n    width: calc(33.33% - 20px); \\n\\n    background: white;\\n    border-radius: 8px;\\n    padding: 20px 5px;\\n    box-shadow: 10px 14px 15px rgba(0, 0, 0, 0.15);\\n    text-align: center;\\n    border: 10px;\\n    \\n}\\n.product-card[_ngcontent-%COMP%]:hover {\\n    font-size: 20px;\\n    transform: translateY(-5px); \\n\\n    box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.2);\\n  }\\n\\n.product-details[_ngcontent-%COMP%]{\\n    font-size: 18px;\\n    color: black;\\n    margin-bottom: 10px;\\n}\\n\\n.btn-grp[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content:  center;\\n    padding-top : 10px;\\n    gap : 25px;\\n}\\n.edit-btn[_ngcontent-%COMP%]{\\n    background-color: yellow;\\n    border: none;\\n    padding: 8px 12px;\\n    cursor: pointer;\\n    border-radius: 4px;\\n}\\n.edit-btn[_ngcontent-%COMP%]:hover {\\n    background-color: #e67e22;\\n  }\\n.delete-btn[_ngcontent-%COMP%]{\\n    background-color: red;\\n    border: none;\\n    padding: 8px 20px;\\n    cursor: pointer;\\n    border-radius: 4px;\\n}\\n.delete-btn[_ngcontent-%COMP%]:hover {\\n    background-color: #c0392b;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZHVjdC1jYXJkL3Byb2R1Y3QtY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGVBQWU7SUFDZixRQUFRO0lBQ1IsdUJBQXVCO0lBQ3ZCLDJCQUEyQjtBQUMvQjtBQUNBO0lBQ0ksMEJBQTBCLEVBQUUsK0JBQStCO0lBQzNELGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLDhDQUE4QztJQUM5QyxrQkFBa0I7SUFDbEIsWUFBWTs7QUFFaEI7QUFDQTtJQUNJLGVBQWU7SUFDZiwyQkFBMkIsRUFBRSwyQkFBMkI7SUFDeEQsMkNBQTJDO0VBQzdDOztBQUVGO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isd0JBQXdCO0lBQ3hCLGtCQUFrQjtJQUNsQixVQUFVO0FBQ2Q7QUFDQTtJQUNJLHdCQUF3QjtJQUN4QixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLHlCQUF5QjtFQUMzQjtBQUNGO0lBQ0kscUJBQXFCO0lBQ3JCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0kseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtY29udGFpbmVye1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgZ2FwOjEwcHg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxufVxyXG4ucHJvZHVjdC1jYXJke1xyXG4gICAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMjBweCk7IC8qIDMgY2FyZHMgcGVyIHJvdywgbWludXMgZ2FwICovXHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIHBhZGRpbmc6IDIwcHggNXB4O1xyXG4gICAgYm94LXNoYWRvdzogMTBweCAxNHB4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMTBweDtcclxuICAgIFxyXG59XHJcbi5wcm9kdWN0LWNhcmQ6aG92ZXIge1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpOyAvKiBTdWJ0bGUgZmxvYXRpbmcgZWZmZWN0ICovXHJcbiAgICBib3gtc2hhZG93OiAzcHggM3B4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gIH1cclxuXHJcbi5wcm9kdWN0LWRldGFpbHN7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4uYnRuLWdycHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICBjZW50ZXI7XHJcbiAgICBwYWRkaW5nLXRvcCA6IDEwcHg7XHJcbiAgICBnYXAgOiAyNXB4O1xyXG59XHJcbi5lZGl0LWJ0bntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHBhZGRpbmc6IDhweCAxMnB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG59XHJcbi5lZGl0LWJ0bjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTY3ZTIyO1xyXG4gIH1cclxuLmRlbGV0ZS1idG57XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiA4cHggMjBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxufVxyXG4uZGVsZXRlLWJ0bjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzAzOTJiO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["EditProductDialogComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProductCardComponent_div_1_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","openEditDialog","ProductCardComponent_div_1_Template_button_click_10_listener","product_r1","$implicit","ctx_r5","deleteProduct","_id","ɵɵadvance","ɵɵtextInterpolate1","name","price","quantity","ProductCardComponent","constructor","dialog","productService","products","id","subscribe","splice","dialogRef","open","width","data","afterClosed","updatedProduct","updateProduct","response","console","log","ɵɵdirectiveInject","i1","MatDialog","i2","ProductService","selectors","inputs","decls","vars","consts","template","ProductCardComponent_Template","rf","ctx","ɵɵtemplate","ProductCardComponent_div_1_Template","ɵɵproperty"],"sources":["c:\\AngularPractice\\Angular-FrontEnd\\ecommerce\\src\\app\\product-card\\product-card.component.ts","c:\\AngularPractice\\Angular-FrontEnd\\ecommerce\\src\\app\\product-card\\product-card.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditProductDialogComponent } from './edit-product-dialog/edit-product-dialog.component';\nimport { ProductService } from '../services/product.service';\n\n@Component({\n  selector: 'app-productCard',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent {\n @Input() products : any[] = []; //using @input to get value from Parent(appcomp) where we have the products array which consists of products\n //so AppComp sends the product array to productCard which is the child\n\n constructor(public dialog: MatDialog, private productService : ProductService) {} \n      deleteProduct(id: string, index : number){ // the id param is for backend deletion, while the index param is for UI deletion since the products are traversed using the index variable\n        this.productService.deleteProduct(id).subscribe( () => {\n          this.products.splice(index,1);\n        });\n      }\n      //creating a modal for the edit option using angular material\n      //creating a instance of MatDialog so it could be used in creating a dialog box / modal\n\n      openEditDialog(index: number) {\n        const dialogRef = this.dialog.open(EditProductDialogComponent, {\n          width: '500px',\n          data: { ...this.products[index] } // Pass a copy of the product at the given index\n        });\n      \n        dialogRef.afterClosed().subscribe(updatedProduct => {\n          if (updatedProduct) {\n            // Updates the product in the products array\n            this.productService.updateProduct(updatedProduct._id, updatedProduct).subscribe(\n              (response) => {\n                this.products[index] = response; // Update UI after successful edit\n              }\n        )}\n            console.log(updatedProduct);\n        });\n      }\n}\n","<div class = \"card-container\">\n    <div class = \"product-card\" *ngFor = \"let product of products; let i = index\"> \n        <!-- product is the item that we're gonna use for each product and products is the array of products in productCardComp.ts-->\n        <!-- the products array creation and pushing of created products occur in the AppComp.ts file and the products array is then sent to the producCardComp.ts-->\n         <p class=\"product-details\">Name : {{product.name}}</p>\n         <p class=\"product-details\">Price : {{product.price}}</p>\n         <p class=\"product-details \">Quantity : {{product.quantity}}</p>\n\n         <div class = \"btn-grp\">\n            <button class = \"edit-btn\" (click) = \"openEditDialog(i)\">Edit</button>\n            <button class = \"delete-btn\" (click) = \"deleteProduct(product._id,i)\">Delete</button>\n         </div>\n    </div>\n</div>\n"],"mappings":"AAEA,SAASA,0BAA0B,QAAQ,qDAAqD;;;;;;;;ICD5FC,EAAA,CAAAC,cAAA,aAA8E;IAG9CD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACtDH,EAAA,CAAAC,cAAA,WAA2B;IAAAD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACxDH,EAAA,CAAAC,cAAA,WAA4B;IAAAD,EAAA,CAAAE,MAAA,GAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAE/DH,EAAA,CAAAC,cAAA,aAAuB;IACOD,EAAA,CAAAI,UAAA,mBAAAC,4DAAA;MAAA,MAAAC,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,IAAA,GAAAH,WAAA,CAAAI,KAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAWZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,cAAA,CAAAL,IAAA,CAAiB;IAAA,EAAC;IAACT,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACtEH,EAAA,CAAAC,cAAA,iBAAsE;IAAzCD,EAAA,CAAAI,UAAA,mBAAAW,6DAAA;MAAA,MAAAT,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAQ,UAAA,GAAAV,WAAA,CAAAW,SAAA;MAAA,MAAAR,IAAA,GAAAH,WAAA,CAAAI,KAAA;MAAA,MAAAQ,MAAA,GAAAlB,EAAA,CAAAY,aAAA;MAAA,OAAWZ,EAAA,CAAAa,WAAA,CAAAK,MAAA,CAAAC,aAAA,CAAAH,UAAA,CAAAI,GAAA,EAAAX,IAAA,CAA4B;IAAA,EAAC;IAACT,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAN7DH,EAAA,CAAAqB,SAAA,GAAuB;IAAvBrB,EAAA,CAAAsB,kBAAA,YAAAN,UAAA,CAAAO,IAAA,KAAuB;IACvBvB,EAAA,CAAAqB,SAAA,GAAyB;IAAzBrB,EAAA,CAAAsB,kBAAA,aAAAN,UAAA,CAAAQ,KAAA,KAAyB;IACxBxB,EAAA,CAAAqB,SAAA,GAA+B;IAA/BrB,EAAA,CAAAsB,kBAAA,gBAAAN,UAAA,CAAAS,QAAA,KAA+B;;;ADIpE,OAAM,MAAOC,oBAAoB;EAEhC;EAEAC,YAAmBC,MAAiB,EAAUC,cAA+B;IAA1D,KAAAD,MAAM,GAANA,MAAM;IAAqB,KAAAC,cAAc,GAAdA,cAAc;IAHnD,KAAAC,QAAQ,GAAW,EAAE,CAAC,CAAC;EAGgD;;EAC3EX,aAAaA,CAACY,EAAU,EAAErB,KAAc;IACtC,IAAI,CAACmB,cAAc,CAACV,aAAa,CAACY,EAAE,CAAC,CAACC,SAAS,CAAE,MAAK;MACpD,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACvB,KAAK,EAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;EACJ;EACA;EACA;EAEAI,cAAcA,CAACJ,KAAa;IAC1B,MAAMwB,SAAS,GAAG,IAAI,CAACN,MAAM,CAACO,IAAI,CAACpC,0BAA0B,EAAE;MAC7DqC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE;QAAE,GAAG,IAAI,CAACP,QAAQ,CAACpB,KAAK;MAAC,CAAE,CAAC;KACnC,CAAC;;IAEFwB,SAAS,CAACI,WAAW,EAAE,CAACN,SAAS,CAACO,cAAc,IAAG;MACjD,IAAIA,cAAc,EAAE;QAClB;QACA,IAAI,CAACV,cAAc,CAACW,aAAa,CAACD,cAAc,CAACnB,GAAG,EAAEmB,cAAc,CAAC,CAACP,SAAS,CAC5ES,QAAQ,IAAI;UACX,IAAI,CAACX,QAAQ,CAACpB,KAAK,CAAC,GAAG+B,QAAQ,CAAC,CAAC;QACnC,CAAC,CACN;;;MACGC,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;IAC/B,CAAC,CAAC;EACJ;;;uBA7BOb,oBAAoB,EAAA1B,EAAA,CAAA4C,iBAAA,CAAAC,EAAA,CAAAC,SAAA,GAAA9C,EAAA,CAAA4C,iBAAA,CAAAG,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAApBtB,oBAAoB;MAAAuB,SAAA;MAAAC,MAAA;QAAApB,QAAA;MAAA;MAAAqB,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVjCxD,EAAA,CAAAC,cAAA,aAA8B;UAC1BD,EAAA,CAAA0D,UAAA,IAAAC,mCAAA,kBAWM;UACV3D,EAAA,CAAAG,YAAA,EAAM;;;UAZgDH,EAAA,CAAAqB,SAAA,GAAa;UAAbrB,EAAA,CAAA4D,UAAA,YAAAH,GAAA,CAAA3B,QAAA,CAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}